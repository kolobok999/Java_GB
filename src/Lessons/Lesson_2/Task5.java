package Lessons.Lesson_2;

import java.io.*;
import java.util.logging.*;
//üìå–ù–∞–ø–∏—à–∏—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤–µ—Ä–Ω–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–∏ –≤ –≤–∏–¥–µ –º–∞—Å—Å–∏–≤–∞ —Å—Ç—Ä–æ–∫.
//üìå–ù–∞–ø–∏—à–∏—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø–∏—à–µ—Ç –º–∞—Å—Å–∏–≤, –≤–æ–∑–≤—Ä–∞—â–µ–Ω–Ω—ã–π –ø—Ä–µ–¥—ã–¥—É—â–∏–º –º–µ—Ç–æ–¥–æ–º –≤ —Ñ–∞–π–ª.
//üìå–û–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ –æ—à–∏–±–∫–∏ —Å –ø–æ–º–æ—â—å—é try-catch –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏. –í —Å–ª—É—á–∞–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è, –æ–Ω–æ –¥–æ–ª–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ –ª–æ–≥-—Ñ–∞–π–ª.


//üìå–ù–∞–ø–∏—à–∏—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –æ–ø—Ä–µ–¥–µ–ª–∏—Ç —Ç–∏–ø (—Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ) —Ñ–∞–π–ª–æ–≤ –∏–∑ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–∏
//  –∏ –≤—ã–≤–µ–¥–µ—Ç –≤ –∫–æ–Ω—Å–æ–ª—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–¥–∞
//    1 –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞: txt
//    2 –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞: pdf
//    3 –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞:
//    4 –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞: jpg

public class Task5 {
    static Logger logger = Logger.getLogger(Task5.class.getName());
    public static void main(String[] args) {
        Task5 task5 = new Task5();
        task5.go();
    }

    private void go() {
        String pathProject = System.getProperty("user.dir");
        String path = pathProject + "/src/Lessons/Lesson_2/";
        setLogger(path);
        String file = path + "out.txt";
        writeListToFile(file, getPaths(path));
        getExtensions(file);
    }

    private void setLogger(String path) {
        try {
            FileHandler fh = new FileHandler(path + "log.xml");
            logger.addHandler(fh);
            XMLFormatter xml = new XMLFormatter();
            fh.setFormatter(xml);
        } catch (IOException e) {
            logger.log(Level.WARNING, e.getMessage());
        }
    }

    private String[] getPaths(String path) {
        File file = new File(path);
        return file.list();
    }

    private void writeListToFile(String fileName, String[] data) {
        try (BufferedWriter br = new BufferedWriter(new FileWriter(fileName))){
            for (String line : data) {
                br.write(line + "\n");
            }
        } catch (IOException ex) {
            System.out.println("Error " + ex);
            logger.info(ex.getMessage());
        }
    }
    private void getExtensions(String fileName) {
        try (BufferedReader br = new BufferedReader(new FileReader(fileName))) {
            String line = br.readLine();
            int i = 1;
            while (line != null) {
                String ext = line.substring(line.lastIndexOf('.'));
                System.out.printf("%d –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞: %s\n",i++, ext);
                line = br.readLine();
            }
        } catch (IOException ex) {
            logger.info(ex.getMessage());
        }

    }
}

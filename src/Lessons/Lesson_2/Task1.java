package Lessons.Lesson_2;
// üìå –î–∞–Ω–æ —á–µ—Ç–Ω–æ–µ —á–∏—Å–ª–æ N (>0) –∏ —Å–∏–º–≤–æ–ª—ã c1 –∏ c2.
// üìå –ù–∞–ø–∏—Å–∞—Ç—å –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤–µ—Ä–Ω–µ—Ç —Å—Ç—Ä–æ–∫—É –¥–ª–∏–Ω—ã N, –∫–æ—Ç–æ—Ä–∞—è
// —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —á–µ—Ä–µ–¥—É—é—â–∏—Ö—Å—è —Å–∏–º–≤–æ–ª–æ–≤ c1 –∏ c2, –Ω–∞—á–∏–Ω–∞—è —Å c1.
public class Task1 {
    public static void main(String[] args) {
        Task1 task1 = new Task1();
        task1.go();
    }

    private void go() {
        int n = 8;
        char c1 = 'A';
        char c2 = 'B';
        System.out.println(alternatingChars(n, c1, c2));
    }

    private String alternatingChars(int n, char c1, char c2) {
        StringBuilder builder = new StringBuilder();
        for (int i = 0; i < n / 2; i++) {
            builder.append(c1);
            builder.append(c2);
        }
        if (n % 2 != 0)
            builder.append(c1);
        return builder.toString();
    }
}

